{"remainingRequest":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\public\\debug\\GenerateTestUserSig.js","dependencies":[{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\public\\debug\\GenerateTestUserSig.js","mtime":1650359286373},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\babel.config.js","mtime":1649933650000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*eslint-disable*/\n\n/*\n * Module:   GenerateTestUserSig\n *\n * Function: 用于生成测试用的 UserSig，UserSig 是腾讯云为其云服务设计的一种安全保护签名。\n *           其计算方法是对 SDKAppID、UserID 和 EXPIRETIME 进行加密，加密算法为 HMAC-SHA256。\n *\n * Attention: 请不要将如下代码发布到您的线上正式版本的 App 中，原因如下：\n *\n *            本文件中的代码虽然能够正确计算出 UserSig，但仅适合快速调通 SDK 的基本功能，不适合线上产品，\n *            这是因为客户端代码中的 SECRETKEY 很容易被反编译逆向破解，尤其是 Web 端的代码被破解的难度几乎为零。\n *            一旦您的密钥泄露，攻击者就可以计算出正确的 UserSig 来盗用您的腾讯云流量。\n *\n *            正确的做法是将 UserSig 的计算代码和加密密钥放在您的业务服务器上，然后由 App 按需向您的服务器获取实时算出的 UserSig。\n *            由于破解服务器的成本要高于破解客户端 App，所以服务器计算的方案能够更好地保护您的加密密钥。\n *\n * Reference：https://cloud.tencent.com/document/product/647/17275#Server\n */\nfunction genTestUserSig(userID) {\n  /**\n   * 腾讯云 SDKAppId，需要替换为您自己账号下的 SDKAppId。\n   *\n   * 进入腾讯云实时音视频[控制台](https://console.cloud.tencent.com/rav ) 创建应用，即可看到 SDKAppId，\n   * 它是腾讯云用于区分客户的唯一标识。\n   */\n  var SDKAPPID = 1400664582;\n  /**\n   * 签名过期时间，建议不要设置的过短\n   * <p>\n   * 时间单位：秒\n   * 默认时间：7 x 24 x 60 x 60 = 604800 = 7 天\n   */\n\n  var EXPIRETIME = 604800;\n  /**\n   * 计算签名用的加密密钥，获取步骤如下：\n   *\n   * step1. 进入腾讯云实时音视频[控制台](https://console.cloud.tencent.com/rav )，如果还没有应用就创建一个，\n   * step2. 单击“应用配置”进入基础配置页面，并进一步找到“帐号体系集成”部分。\n   * step3. 点击“查看密钥”按钮，就可以看到计算 UserSig 使用的加密的密钥了，请将其拷贝并复制到如下的变量中\n   *\n   * 注意：该方案仅适用于调试Demo，正式上线前请将 UserSig 计算代码和密钥迁移到您的后台服务器上，以避免加密密钥泄露导致的流量盗用。\n   * 文档：https://cloud.tencent.com/document/product/647/17275#Server\n   */\n\n  var SECRETKEY = '75601793f58c5591970f29fc8cf6811526b70a365be4ac93c80bda8eb3cd5e51';\n  var generator = new window.LibGenerateTestUserSig(SDKAPPID, SECRETKEY, EXPIRETIME);\n  var userSig = generator.genTestUserSig(userID);\n  return {\n    SDKAppID: SDKAPPID,\n    userSig: userSig\n  };\n}",{"version":3,"sources":["C:/Users/shenq/Downloads/IM-Web-wdy01 (1)/IM-Web-wdy01/public/debug/GenerateTestUserSig.js"],"names":["genTestUserSig","userID","SDKAPPID","EXPIRETIME","SECRETKEY","generator","window","LibGenerateTestUserSig","userSig","SDKAppID"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B;AACF;AACA;AACA;AACA;AACA;AACE,MAAIC,QAAQ,GAAG,UAAf;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,MAAIC,UAAU,GAAG,MAAjB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAIC,SAAS,GAAG,kEAAhB;AAEA,MAAIC,SAAS,GAAG,IAAIC,MAAM,CAACC,sBAAX,CAAkCL,QAAlC,EAA4CE,SAA5C,EAAuDD,UAAvD,CAAhB;AACA,MAAIK,OAAO,GAAGH,SAAS,CAACL,cAAV,CAAyBC,MAAzB,CAAd;AACA,SAAO;AACLQ,IAAAA,QAAQ,EAAEP,QADL;AAELM,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID","sourcesContent":["/*eslint-disable*/\n/*\n * Module:   GenerateTestUserSig\n *\n * Function: 用于生成测试用的 UserSig，UserSig 是腾讯云为其云服务设计的一种安全保护签名。\n *           其计算方法是对 SDKAppID、UserID 和 EXPIRETIME 进行加密，加密算法为 HMAC-SHA256。\n *\n * Attention: 请不要将如下代码发布到您的线上正式版本的 App 中，原因如下：\n *\n *            本文件中的代码虽然能够正确计算出 UserSig，但仅适合快速调通 SDK 的基本功能，不适合线上产品，\n *            这是因为客户端代码中的 SECRETKEY 很容易被反编译逆向破解，尤其是 Web 端的代码被破解的难度几乎为零。\n *            一旦您的密钥泄露，攻击者就可以计算出正确的 UserSig 来盗用您的腾讯云流量。\n *\n *            正确的做法是将 UserSig 的计算代码和加密密钥放在您的业务服务器上，然后由 App 按需向您的服务器获取实时算出的 UserSig。\n *            由于破解服务器的成本要高于破解客户端 App，所以服务器计算的方案能够更好地保护您的加密密钥。\n *\n * Reference：https://cloud.tencent.com/document/product/647/17275#Server\n */\nfunction genTestUserSig(userID) {\n  /**\n   * 腾讯云 SDKAppId，需要替换为您自己账号下的 SDKAppId。\n   *\n   * 进入腾讯云实时音视频[控制台](https://console.cloud.tencent.com/rav ) 创建应用，即可看到 SDKAppId，\n   * 它是腾讯云用于区分客户的唯一标识。\n   */\n  var SDKAPPID = 1400664582;\n\n  /**\n   * 签名过期时间，建议不要设置的过短\n   * <p>\n   * 时间单位：秒\n   * 默认时间：7 x 24 x 60 x 60 = 604800 = 7 天\n   */\n  var EXPIRETIME = 604800;\n\n  /**\n   * 计算签名用的加密密钥，获取步骤如下：\n   *\n   * step1. 进入腾讯云实时音视频[控制台](https://console.cloud.tencent.com/rav )，如果还没有应用就创建一个，\n   * step2. 单击“应用配置”进入基础配置页面，并进一步找到“帐号体系集成”部分。\n   * step3. 点击“查看密钥”按钮，就可以看到计算 UserSig 使用的加密的密钥了，请将其拷贝并复制到如下的变量中\n   *\n   * 注意：该方案仅适用于调试Demo，正式上线前请将 UserSig 计算代码和密钥迁移到您的后台服务器上，以避免加密密钥泄露导致的流量盗用。\n   * 文档：https://cloud.tencent.com/document/product/647/17275#Server\n   */\n  var SECRETKEY = '75601793f58c5591970f29fc8cf6811526b70a365be4ac93c80bda8eb3cd5e51';\n\n  var generator = new window.LibGenerateTestUserSig(SDKAPPID, SECRETKEY, EXPIRETIME);\n  var userSig = generator.genTestUserSig(userID);\n  return {\n    SDKAppID: SDKAPPID,\n    userSig: userSig\n  };\n}\n"]}]}