{"remainingRequest":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\src\\utils\\formatTime.js","dependencies":[{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\src\\utils\\formatTime.js","mtime":1649954483393},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\babel.config.js","mtime":1649933650000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport function formatTime(date, fmt) {\n  if (typeof date === 'string') {\n    date = new Date(date.replace(/-/g, '/'));\n  }\n\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n\n  var o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  };\n\n  for (var k in o) {\n    if (new RegExp(\"(\".concat(k, \")\")).test(fmt)) {\n      var str = o[k] + '';\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? str : padLeftZero(str));\n    }\n  }\n\n  return fmt;\n}",{"version":3,"sources":["C:/Users/shenq/Downloads/IM-Web-wdy01 (1)/IM-Web-wdy01/src/utils/formatTime.js"],"names":["formatTime","date","fmt","Date","replace","test","RegExp","$1","getFullYear","substr","length","o","getMonth","getDate","getHours","getMinutes","getSeconds","k","str","padLeftZero"],"mappings":";;AAAA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAClC,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1BA,IAAAA,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAI,CAACG,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAAT,CAAP;AACH;;AACD,MAAI,OAAOC,IAAP,CAAYH,GAAZ,CAAJ,EAAsB;AAClBA,IAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYE,MAAM,CAACC,EAAnB,EAAuB,CAACN,IAAI,CAACO,WAAL,KAAqB,EAAtB,EAA0BC,MAA1B,CAAiC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAA/C,CAAvB,CAAN;AACH;;AACD,MAAMC,CAAC,GAAG;AACN,UAAMV,IAAI,CAACW,QAAL,KAAkB,CADlB;AAEN,UAAMX,IAAI,CAACY,OAAL,EAFA;AAGN,UAAMZ,IAAI,CAACa,QAAL,EAHA;AAIN,UAAMb,IAAI,CAACc,UAAL,EAJA;AAKN,UAAMd,IAAI,CAACe,UAAL;AALA,GAAV;;AAOA,OAAK,IAAMC,CAAX,IAAgBN,CAAhB,EAAmB;AACf,QAAI,IAAIL,MAAJ,YAAeW,CAAf,QAAqBZ,IAArB,CAA0BH,GAA1B,CAAJ,EAAoC;AAChC,UAAMgB,GAAG,GAAGP,CAAC,CAACM,CAAD,CAAD,GAAO,EAAnB;AACAf,MAAAA,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYE,MAAM,CAACC,EAAnB,EAAwBD,MAAM,CAACC,EAAP,CAAUG,MAAV,KAAqB,CAAtB,GAA2BQ,GAA3B,GAAiCC,WAAW,CAACD,GAAD,CAAnE,CAAN;AACH;AACJ;;AACD,SAAOhB,GAAP;AACH","sourcesContent":["export function formatTime(date, fmt) {\r\n    if (typeof date === 'string') {\r\n        date = new Date(date.replace(/-/g, '/'))\r\n    }\r\n    if (/(y+)/.test(fmt)) {\r\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\r\n    }\r\n    const o = {\r\n        'M+': date.getMonth() + 1,\r\n        'd+': date.getDate(),\r\n        'h+': date.getHours(),\r\n        'm+': date.getMinutes(),\r\n        's+': date.getSeconds()\r\n    }\r\n    for (const k in o) {\r\n        if (new RegExp(`(${k})`).test(fmt)) {\r\n            const str = o[k] + ''\r\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? str : padLeftZero(str))\r\n        }\r\n    }\r\n    return fmt\r\n}\r\n"]}]}