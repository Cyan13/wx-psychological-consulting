{"remainingRequest":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\src\\components\\message\\message-send-box.vue?vue&type=template&id=0148fc24&scoped=true&","dependencies":[{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\src\\components\\message\\message-send-box.vue","mtime":1650125602988},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\shenq\\Downloads\\IM-Web-wdy01 (1)\\IM-Web-wdy01\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      style: _vm.focus ? { backgroundColor: \"white\" } : {},\n      attrs: { id: \"message-send-box-wrapper\" },\n      on: { drop: _vm.dropHandler },\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"send-header-bar\" },\n        [\n          _c(\n            \"el-popover\",\n            { attrs: { placement: \"top\", width: \"400\", trigger: \"click\" } },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"emojis\" },\n                _vm._l(_vm.emojiName, function (item) {\n                  return _c(\n                    \"div\",\n                    {\n                      key: item,\n                      staticClass: \"emoji\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.chooseEmoji(item)\n                        },\n                      },\n                    },\n                    [\n                      _c(\"img\", {\n                        staticStyle: { width: \"30px\", height: \"30px\" },\n                        attrs: { src: _vm.emojiUrl + _vm.emojiMap[item] },\n                      }),\n                    ]\n                  )\n                }),\n                0\n              ),\n              _c(\"i\", {\n                staticClass: \"iconfont icon-smile\",\n                attrs: { slot: \"reference\", title: \"发表情\" },\n                slot: \"reference\",\n              }),\n            ]\n          ),\n          _c(\"i\", {\n            staticClass: \"iconfont icon-tupian\",\n            attrs: { title: \"发图片\" },\n            on: { click: _vm.handleSendImageClick },\n          }),\n          _c(\"i\", {\n            staticClass: \"el-icon-camera\",\n            attrs: { title: \"发视频\" },\n            on: { click: _vm.handleSendVideoClick },\n          }),\n          _vm.currentConversationType === _vm.TIM.TYPES.CONV_GROUP &&\n          _vm.groupProfile.type !== \"AVChatRoom\"\n            ? _c(\n                \"div\",\n                {\n                  staticClass: \"group-live-icon-box\",\n                  attrs: { title: \"群直播\" },\n                  on: { click: _vm.groupLive },\n                },\n                [\n                  _c(\"i\", { staticClass: \"group-live-icon\" }),\n                  _c(\"i\", { staticClass: \"group-live-icon-hover\" }),\n                ]\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"bottom\" },\n        [\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.messageContent,\n                expression: \"messageContent\",\n              },\n            ],\n            ref: \"text-input\",\n            staticClass: \"text-input\",\n            attrs: { rows: \"4\", resize: \"false\" },\n            domProps: { value: _vm.messageContent },\n            on: {\n              focus: function ($event) {\n                _vm.focus = true\n              },\n              blur: function ($event) {\n                _vm.focus = false\n              },\n              input: [\n                function ($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.messageContent = $event.target.value\n                },\n                _vm.inputChange,\n              ],\n              keydown: [\n                function ($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  if (\n                    $event.ctrlKey ||\n                    $event.shiftKey ||\n                    $event.altKey ||\n                    $event.metaKey\n                  ) {\n                    return null\n                  }\n                  $event.preventDefault()\n                  return _vm.handleEnter.apply(null, arguments)\n                },\n                function ($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"up\", 38, $event.key, [\n                      \"Up\",\n                      \"ArrowUp\",\n                    ])\n                  ) {\n                    return null\n                  }\n                  $event.stopPropagation()\n                  return _vm.handleUp.apply(null, arguments)\n                },\n                function ($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                      \"Down\",\n                      \"ArrowDown\",\n                    ])\n                  ) {\n                    return null\n                  }\n                  $event.stopPropagation()\n                  return _vm.handleDown.apply(null, arguments)\n                },\n              ],\n              keyup: function ($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                if (!$event.ctrlKey) {\n                  return null\n                }\n                $event.preventDefault()\n                if ($event.shiftKey || $event.altKey || $event.metaKey) {\n                  return null\n                }\n                return _vm.handleLine.apply(null, arguments)\n              },\n            },\n          }),\n          _c(\n            \"el-tooltip\",\n            {\n              staticClass: \"item\",\n              attrs: {\n                effect: \"dark\",\n                content: \"按Enter发送消息，Ctrl+Enter换行\",\n                placement: \"left-start\",\n              },\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"btn-send\", on: { click: _vm.sendTextMessage } },\n                [_c(\"div\", { staticClass: \"tim-icon-send\" })]\n              ),\n            ]\n          ),\n        ],\n        1\n      ),\n      _c(\"input\", {\n        ref: \"imagePicker\",\n        staticStyle: { display: \"none\" },\n        attrs: {\n          type: \"file\",\n          id: \"imagePicker\",\n          accept: \".jpg, .jpeg, .png, .gif, .bmp\",\n        },\n        on: { change: _vm.sendImage },\n      }),\n      _c(\"input\", {\n        ref: \"filePicker\",\n        staticStyle: { display: \"none\" },\n        attrs: { type: \"file\", id: \"filePicker\" },\n        on: { change: _vm.sendFile },\n      }),\n      _c(\"input\", {\n        ref: \"videoPicker\",\n        staticStyle: { display: \"none\" },\n        attrs: { type: \"file\", id: \"videoPicker\", accept: \".mp4\" },\n        on: { change: _vm.sendVideo },\n      }),\n      _vm.currentConversationType === _vm.TIM.TYPES.CONV_GROUP &&\n      _vm.showCallingMember\n        ? _c(\n            \"div\",\n            { staticClass: \"calling-member-list\" },\n            [\n              _c(\"calling-member-list\", {\n                attrs: { type: _vm.listTpye },\n                on: { getList: _vm.getList },\n              }),\n              _c(\"div\", { staticClass: \"calling-list-btn\" }, [\n                _c(\n                  \"span\",\n                  {\n                    staticClass: \"calling-btn\",\n                    on: { click: _vm.cancelCalling },\n                  },\n                  [_vm._v(\"取消\")]\n                ),\n                _c(\n                  \"span\",\n                  {\n                    staticClass: \"calling-btn\",\n                    on: { click: _vm.callingHandler },\n                  },\n                  [_vm._v(\"确定\")]\n                ),\n              ]),\n            ],\n            1\n          )\n        : _vm._e(),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}